{"version":3,"sources":["CardStack.tsx"],"names":["React","Animated","View","StyleSheet","Dimensions","Platform","ScreenContainer","Screen","screensEnabled","getDefaultHeaderHeight","CardContainer","DefaultTransition","ModalTransition","forNoAnimation","forNoAnimationHeader","forNoAnimationCard","getDistanceForDirection","maybeExpoVersion","global","Expo","Constants","manifest","sdkVersion","split","isInsufficientExpoVersion","Number","EPSILON","FAR_FAR_AWAY","dimensions","get","layout","width","height","MaybeScreenContainer","enabled","style","rest","OS","overflow","MaybeScreen","active","top","transform","translateY","interpolate","inputRange","outputRange","FALLBACK_DESCRIPTOR","Object","freeze","options","getHeaderHeights","routes","insets","descriptors","previous","reduce","acc","curr","key","flatten","headerStyle","safeAreaInsets","headerStatusBarHeight","getDistanceFromOptions","mode","descriptor","gestureDirection","getProgressFromGesture","gesture","distance","CardStack","Component","scenes","gestures","props","headerHeights","e","nativeEvent","setState","state","route","previousHeight","index","getDerivedStateFromProps","animationEnabled","Value","openingRouteKeys","includes","map","self","previousRoute","nextRoute","oldScene","currentGesture","previousGesture","undefined","nextGesture","nextDescriptor","previousDescriptor","scene","progress","current","next","__memo","every","it","i","render","closingRouteKeys","onOpenRoute","onCloseRoute","getPreviousRoute","getGesturesEnabled","renderHeader","renderScene","headerMode","onTransitionStart","onTransitionEnd","onPageChangeStart","onPageChangeConfirm","onPageChangeCancel","focusedRoute","focusedDescriptor","focusedOptions","defaultTransitionPreset","headerStyleInterpolator","right","bottom","left","isScreensEnabled","styles","container","handleLayout","focused","isScreenActive","length","extrapolate","headerShown","headerTransparent","cardShadowEnabled","cardOverlayEnabled","cardStyle","gestureResponseDistance","gestureVelocityImpact","transitionSpec","cardStyleInterpolator","transitionConfig","nextScene","safeAreaInsetTop","safeAreaInsetRight","safeAreaInsetBottom","safeAreaInsetLeft","previousScene","j","s","absoluteFill","handleHeaderLayout","getFocusedRoute","onContentHeightChange","styleInterpolator","floating","create","flex","position"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  View,\n  StyleSheet,\n  LayoutChangeEvent,\n  Dimensions,\n  Platform,\n  ViewProps,\n} from 'react-native';\nimport { EdgeInsets } from 'react-native-safe-area-context';\n// eslint-disable-next-line import/no-unresolved\nimport { ScreenContainer, Screen, screensEnabled } from 'react-native-screens'; // Import with * as to prevent getters being called\nimport { Route, StackNavigationState } from '@react-navigation/native';\n\nimport { getDefaultHeaderHeight } from '../Header/HeaderSegment';\nimport { Props as HeaderContainerProps } from '../Header/HeaderContainer';\nimport CardContainer from './CardContainer';\nimport {\n  DefaultTransition,\n  ModalTransition,\n} from '../../TransitionConfigs/TransitionPresets';\nimport { forNoAnimation as forNoAnimationHeader } from '../../TransitionConfigs/HeaderStyleInterpolators';\nimport { forNoAnimation as forNoAnimationCard } from '../../TransitionConfigs/CardStyleInterpolators';\nimport getDistanceForDirection from '../../utils/getDistanceForDirection';\nimport {\n  Layout,\n  StackHeaderMode,\n  StackCardMode,\n  Scene,\n  StackDescriptorMap,\n  StackNavigationOptions,\n  StackDescriptor,\n} from '../../types';\n\ntype GestureValues = {\n  [key: string]: Animated.Value;\n};\n\n// @ts-ignore\nconst maybeExpoVersion = global.Expo?.Constants.manifest.sdkVersion.split(\n  '.'\n)[0];\nconst isInsufficientExpoVersion = maybeExpoVersion\n  ? Number(maybeExpoVersion) <= 36\n  : maybeExpoVersion === 'UNVERSIONED';\n\ntype Props = {\n  mode: StackCardMode;\n  insets: EdgeInsets;\n  state: StackNavigationState;\n  descriptors: StackDescriptorMap;\n  routes: Route<string>[];\n  openingRouteKeys: string[];\n  closingRouteKeys: string[];\n  onOpenRoute: (props: { route: Route<string> }) => void;\n  onCloseRoute: (props: { route: Route<string> }) => void;\n  getPreviousRoute: (props: {\n    route: Route<string>;\n  }) => Route<string> | undefined;\n  getGesturesEnabled: (props: { route: Route<string> }) => boolean;\n  renderHeader: (props: HeaderContainerProps) => React.ReactNode;\n  renderScene: (props: { route: Route<string> }) => React.ReactNode;\n  headerMode: StackHeaderMode;\n  onTransitionStart: (\n    props: { route: Route<string> },\n    closing: boolean\n  ) => void;\n  onTransitionEnd: (props: { route: Route<string> }, closing: boolean) => void;\n  onPageChangeStart?: () => void;\n  onPageChangeConfirm?: () => void;\n  onPageChangeCancel?: () => void;\n};\n\ntype State = {\n  routes: Route<string>[];\n  descriptors: StackDescriptorMap;\n  scenes: Scene<Route<string>>[];\n  gestures: GestureValues;\n  layout: Layout;\n  headerHeights: Record<string, number>;\n};\n\nconst EPSILON = 0.01;\nconst FAR_FAR_AWAY = 9000;\n\nconst dimensions = Dimensions.get('window');\nconst layout = { width: dimensions.width, height: dimensions.height };\n\nconst MaybeScreenContainer = ({\n  enabled,\n  style,\n  ...rest\n}: ViewProps & {\n  enabled: boolean;\n  children: React.ReactNode;\n}) => {\n  if (enabled && screensEnabled()) {\n    return <ScreenContainer style={style} {...rest} />;\n  }\n\n  return (\n    <View\n      collapsable={!enabled}\n      removeClippedSubviews={Platform.OS !== 'ios' && enabled}\n      style={[style, { overflow: 'hidden' }]}\n      {...rest}\n    />\n  );\n};\n\nconst MaybeScreen = ({\n  enabled,\n  active,\n  style,\n  ...rest\n}: ViewProps & {\n  enabled: boolean;\n  active: number | Animated.AnimatedInterpolation;\n  children: React.ReactNode;\n}) => {\n  if (enabled && screensEnabled()) {\n    // @ts-ignore\n    return <Screen active={active} style={style} {...rest} />;\n  }\n\n  return (\n    <Animated.View\n      style={[\n        style,\n        {\n          overflow: 'hidden',\n          // Position the screen offscreen to take advantage of offscreen perf optimization\n          // https://facebook.github.io/react-native/docs/view#removeclippedsubviews\n          // This can be useful if screens is not enabled\n          // It's buggy on iOS, so we don't enable it there\n          top:\n            enabled && typeof active === 'number' && !active ? FAR_FAR_AWAY : 0,\n          transform: [\n            {\n              // If the `active` prop is animated node, we can't use the `left` property due to native driver\n              // So we use `translateY` instead\n              translateY:\n                enabled && typeof active !== 'number'\n                  ? active.interpolate({\n                      inputRange: [0, 1],\n                      outputRange: [FAR_FAR_AWAY, 0],\n                    })\n                  : 0,\n            },\n          ],\n        },\n      ]}\n      {...rest}\n    />\n  );\n};\n\nconst FALLBACK_DESCRIPTOR = Object.freeze({ options: {} });\n\nconst getHeaderHeights = (\n  routes: Route<string>[],\n  insets: EdgeInsets,\n  descriptors: StackDescriptorMap,\n  layout: Layout,\n  previous: Record<string, number>\n) => {\n  return routes.reduce<Record<string, number>>((acc, curr) => {\n    const { options = {} } = descriptors[curr.key] || {};\n    const { height = previous[curr.key] } = StyleSheet.flatten(\n      options.headerStyle || {}\n    );\n\n    const safeAreaInsets = {\n      ...insets,\n      ...options.safeAreaInsets,\n    };\n\n    const { headerStatusBarHeight = safeAreaInsets.top } = options;\n\n    acc[curr.key] =\n      typeof height === 'number'\n        ? height\n        : getDefaultHeaderHeight(layout, headerStatusBarHeight);\n\n    return acc;\n  }, {});\n};\n\nconst getDistanceFromOptions = (\n  mode: StackCardMode,\n  layout: Layout,\n  descriptor?: StackDescriptor\n) => {\n  const {\n    gestureDirection = mode === 'modal'\n      ? ModalTransition.gestureDirection\n      : DefaultTransition.gestureDirection,\n  } = descriptor?.options || {};\n\n  return getDistanceForDirection(layout, gestureDirection);\n};\n\nconst getProgressFromGesture = (\n  mode: StackCardMode,\n  gesture: Animated.Value,\n  layout: Layout,\n  descriptor?: StackDescriptor\n) => {\n  const distance = getDistanceFromOptions(mode, layout, descriptor);\n\n  if (distance > 0) {\n    return gesture.interpolate({\n      inputRange: [0, distance],\n      outputRange: [1, 0],\n    });\n  }\n\n  return gesture.interpolate({\n    inputRange: [distance, 0],\n    outputRange: [0, 1],\n  });\n};\n\nexport default class CardStack extends React.Component<Props, State> {\n  static getDerivedStateFromProps(props: Props, state: State) {\n    if (\n      props.routes === state.routes &&\n      props.descriptors === state.descriptors\n    ) {\n      return null;\n    }\n\n    const gestures = props.routes.reduce<GestureValues>((acc, curr) => {\n      const descriptor = props.descriptors[curr.key];\n      const { animationEnabled } = descriptor?.options || {};\n\n      acc[curr.key] =\n        state.gestures[curr.key] ||\n        new Animated.Value(\n          props.openingRouteKeys.includes(curr.key) &&\n          animationEnabled !== false\n            ? getDistanceFromOptions(props.mode, state.layout, descriptor)\n            : 0\n        );\n\n      return acc;\n    }, {});\n\n    return {\n      routes: props.routes,\n      scenes: props.routes.map((route, index, self) => {\n        const previousRoute = self[index - 1];\n        const nextRoute = self[index + 1];\n\n        const oldScene = state.scenes[index];\n\n        const currentGesture = gestures[route.key];\n        const previousGesture = previousRoute\n          ? gestures[previousRoute.key]\n          : undefined;\n        const nextGesture = nextRoute ? gestures[nextRoute.key] : undefined;\n\n        const descriptor =\n          props.descriptors[route.key] ||\n          state.descriptors[route.key] ||\n          (oldScene ? oldScene.descriptor : FALLBACK_DESCRIPTOR);\n\n        const nextDescriptor =\n          props.descriptors[nextRoute?.key] ||\n          state.descriptors[nextRoute?.key];\n\n        const previousDescriptor =\n          props.descriptors[previousRoute?.key] ||\n          state.descriptors[previousRoute?.key];\n\n        const scene = {\n          route,\n          descriptor,\n          progress: {\n            current: getProgressFromGesture(\n              props.mode,\n              currentGesture,\n              state.layout,\n              descriptor\n            ),\n            next: nextGesture\n              ? getProgressFromGesture(\n                  props.mode,\n                  nextGesture,\n                  state.layout,\n                  nextDescriptor\n                )\n              : undefined,\n            previous: previousGesture\n              ? getProgressFromGesture(\n                  props.mode,\n                  previousGesture,\n                  state.layout,\n                  previousDescriptor\n                )\n              : undefined,\n          },\n          __memo: [\n            route,\n            state.layout,\n            descriptor,\n            nextDescriptor,\n            previousDescriptor,\n            currentGesture,\n            nextGesture,\n            previousGesture,\n          ],\n        };\n\n        if (\n          oldScene &&\n          scene.__memo.every((it, i) => {\n            // @ts-ignore\n            return oldScene.__memo[i] === it;\n          })\n        ) {\n          return oldScene;\n        }\n\n        return scene;\n      }),\n      gestures,\n      descriptors: props.descriptors,\n      headerHeights: getHeaderHeights(\n        props.routes,\n        props.insets,\n        state.descriptors,\n        state.layout,\n        state.headerHeights\n      ),\n    };\n  }\n\n  state: State = {\n    routes: [],\n    scenes: [],\n    gestures: {},\n    layout,\n    descriptors: this.props.descriptors,\n    // Used when card's header is null and mode is float to make transition\n    // between screens with headers and those without headers smooth.\n    // This is not a great heuristic here. We don't know synchronously\n    // on mount what the header height is so we have just used the most\n    // common cases here.\n    headerHeights: {},\n  };\n\n  private handleLayout = (e: LayoutChangeEvent) => {\n    const { height, width } = e.nativeEvent.layout;\n\n    const layout = { width, height };\n\n    this.setState((state, props) => {\n      if (height === state.layout.height && width === state.layout.width) {\n        return null;\n      }\n\n      return {\n        layout,\n        headerHeights: getHeaderHeights(\n          props.routes,\n          props.insets,\n          state.descriptors,\n          layout,\n          {}\n        ),\n      };\n    });\n  };\n\n  private handleHeaderLayout = ({\n    route,\n    height,\n  }: {\n    route: Route<string>;\n    height: number;\n  }) => {\n    this.setState(({ headerHeights }) => {\n      const previousHeight = headerHeights[route.key];\n\n      if (previousHeight === height) {\n        return null;\n      }\n\n      return {\n        headerHeights: {\n          ...headerHeights,\n          [route.key]: height,\n        },\n      };\n    });\n  };\n\n  private getFocusedRoute = () => {\n    const { state } = this.props;\n\n    return state.routes[state.index];\n  };\n\n  render() {\n    const {\n      mode,\n      insets,\n      descriptors,\n      state,\n      routes,\n      closingRouteKeys,\n      onOpenRoute,\n      onCloseRoute,\n      getPreviousRoute,\n      getGesturesEnabled,\n      renderHeader,\n      renderScene,\n      headerMode,\n      onTransitionStart,\n      onTransitionEnd,\n      onPageChangeStart,\n      onPageChangeConfirm,\n      onPageChangeCancel,\n    } = this.props;\n\n    const { scenes, layout, gestures, headerHeights } = this.state;\n\n    const focusedRoute = state.routes[state.index];\n    const focusedDescriptor = descriptors[focusedRoute.key];\n    const focusedOptions = focusedDescriptor ? focusedDescriptor.options : {};\n\n    let defaultTransitionPreset =\n      mode === 'modal' ? ModalTransition : DefaultTransition;\n\n    if (headerMode === 'screen') {\n      defaultTransitionPreset = {\n        ...defaultTransitionPreset,\n        headerStyleInterpolator: forNoAnimationHeader,\n      };\n    }\n\n    const {\n      top = insets.top,\n      right = insets.right,\n      bottom = insets.bottom,\n      left = insets.left,\n    } = focusedOptions.safeAreaInsets || {};\n\n    // Screens is buggy on iOS, so we don't enable it there\n    // For modals, usually we want the screen underneath to be visible, so also disable it there\n    const isScreensEnabled =\n      Platform.OS !== 'ios' &&\n      (isInsufficientExpoVersion ? mode !== 'modal' : true);\n\n    return (\n      <React.Fragment>\n        <MaybeScreenContainer\n          enabled={isScreensEnabled}\n          style={styles.container}\n          onLayout={this.handleLayout}\n        >\n          {routes.map((route, index, self) => {\n            const focused = focusedRoute.key === route.key;\n            const gesture = gestures[route.key];\n            const scene = scenes[index];\n\n            // Display current screen and a screen beneath.\n            let isScreenActive: Animated.AnimatedInterpolation | 0 | 1 =\n              index >= self.length - 2 ? 1 : 0;\n\n            if (isInsufficientExpoVersion) {\n              isScreenActive =\n                index === self.length - 1\n                  ? 1\n                  : Platform.OS === 'android'\n                  ? scene.progress.next\n                    ? scene.progress.next.interpolate({\n                        inputRange: [0, 1 - EPSILON, 1],\n                        outputRange: [1, 1, 0],\n                        extrapolate: 'clamp',\n                      })\n                    : 1\n                  : index === self.length - 2\n                  ? 1\n                  : 0;\n            }\n\n            const {\n              safeAreaInsets,\n              headerShown,\n              headerTransparent,\n              cardShadowEnabled,\n              cardOverlayEnabled,\n              cardStyle,\n              animationEnabled,\n              gestureResponseDistance,\n              gestureVelocityImpact,\n              gestureDirection = defaultTransitionPreset.gestureDirection,\n              transitionSpec = defaultTransitionPreset.transitionSpec,\n              cardStyleInterpolator = animationEnabled === false\n                ? forNoAnimationCard\n                : defaultTransitionPreset.cardStyleInterpolator,\n              headerStyleInterpolator = defaultTransitionPreset.headerStyleInterpolator,\n            } = scene.descriptor\n              ? scene.descriptor.options\n              : ({} as StackNavigationOptions);\n\n            let transitionConfig = {\n              gestureDirection,\n              transitionSpec,\n              cardStyleInterpolator,\n              headerStyleInterpolator,\n            };\n\n            // When a screen is not the last, it should use next screen's transition config\n            // Many transitions also animate the previous screen, so using 2 different transitions doesn't look right\n            // For example combining a slide and a modal transition would look wrong otherwise\n            // With this approach, combining different transition styles in the same navigator mostly looks right\n            // This will still be broken when 2 transitions have different idle state (e.g. modal presentation),\n            // but majority of the transitions look alright\n            if (index !== self.length - 1) {\n              const nextScene = scenes[index + 1];\n\n              if (nextScene) {\n                const {\n                  animationEnabled,\n                  gestureDirection = defaultTransitionPreset.gestureDirection,\n                  transitionSpec = defaultTransitionPreset.transitionSpec,\n                  cardStyleInterpolator = animationEnabled === false\n                    ? forNoAnimationCard\n                    : defaultTransitionPreset.cardStyleInterpolator,\n                  headerStyleInterpolator = defaultTransitionPreset.headerStyleInterpolator,\n                } = nextScene.descriptor\n                  ? nextScene.descriptor.options\n                  : ({} as StackNavigationOptions);\n\n                transitionConfig = {\n                  gestureDirection,\n                  transitionSpec,\n                  cardStyleInterpolator,\n                  headerStyleInterpolator,\n                };\n              }\n            }\n\n            const {\n              top: safeAreaInsetTop = insets.top,\n              right: safeAreaInsetRight = insets.right,\n              bottom: safeAreaInsetBottom = insets.bottom,\n              left: safeAreaInsetLeft = insets.left,\n            } = safeAreaInsets || {};\n\n            const previousRoute = getPreviousRoute({ route: scene.route });\n\n            let previousScene = scenes[index - 1];\n\n            if (previousRoute) {\n              // The previous scene will be shortly before the current scene in the array\n              // So loop back from current index to avoid looping over the full array\n              for (let j = index - 1; j >= 0; j--) {\n                const s = scenes[j];\n\n                if (s && s.route.key === previousRoute.key) {\n                  previousScene = s;\n                  break;\n                }\n              }\n            }\n\n            return (\n              <MaybeScreen\n                key={route.key}\n                style={StyleSheet.absoluteFill}\n                enabled={isScreensEnabled}\n                active={isScreenActive}\n                pointerEvents=\"box-none\"\n              >\n                <CardContainer\n                  index={index}\n                  active={index === self.length - 1}\n                  focused={focused}\n                  closing={closingRouteKeys.includes(route.key)}\n                  layout={layout}\n                  gesture={gesture}\n                  scene={scene}\n                  previousScene={previousScene}\n                  safeAreaInsetTop={safeAreaInsetTop}\n                  safeAreaInsetRight={safeAreaInsetRight}\n                  safeAreaInsetBottom={safeAreaInsetBottom}\n                  safeAreaInsetLeft={safeAreaInsetLeft}\n                  cardOverlayEnabled={cardOverlayEnabled}\n                  cardShadowEnabled={cardShadowEnabled}\n                  cardStyle={cardStyle}\n                  onPageChangeStart={onPageChangeStart}\n                  onPageChangeConfirm={onPageChangeConfirm}\n                  onPageChangeCancel={onPageChangeCancel}\n                  gestureResponseDistance={gestureResponseDistance}\n                  headerHeight={headerHeights[route.key]}\n                  onHeaderHeightChange={this.handleHeaderLayout}\n                  getPreviousRoute={getPreviousRoute}\n                  getFocusedRoute={this.getFocusedRoute}\n                  headerMode={headerMode}\n                  headerShown={headerShown}\n                  headerTransparent={headerTransparent}\n                  renderHeader={renderHeader}\n                  renderScene={renderScene}\n                  onOpenRoute={onOpenRoute}\n                  onCloseRoute={onCloseRoute}\n                  onTransitionStart={onTransitionStart}\n                  onTransitionEnd={onTransitionEnd}\n                  gestureEnabled={index !== 0 && getGesturesEnabled({ route })}\n                  gestureVelocityImpact={gestureVelocityImpact}\n                  {...transitionConfig}\n                />\n              </MaybeScreen>\n            );\n          })}\n        </MaybeScreenContainer>\n        {headerMode === 'float'\n          ? renderHeader({\n              mode: 'float',\n              layout,\n              insets: { top, right, bottom, left },\n              scenes,\n              getPreviousRoute,\n              getFocusedRoute: this.getFocusedRoute,\n              onContentHeightChange: this.handleHeaderLayout,\n              gestureDirection:\n                focusedOptions.gestureDirection !== undefined\n                  ? focusedOptions.gestureDirection\n                  : defaultTransitionPreset.gestureDirection,\n              styleInterpolator:\n                focusedOptions.headerStyleInterpolator !== undefined\n                  ? focusedOptions.headerStyleInterpolator\n                  : defaultTransitionPreset.headerStyleInterpolator,\n              style: styles.floating,\n            })\n          : null}\n      </React.Fragment>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden',\n  },\n  floating: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n  },\n});\n"]}